{
    "version": "https://jsonfeed.org/version/1",
    "title": "不利索の鸣 • All posts by \"jedis\" tag",
    "description": "欢迎来到鸣崽的空间，这里不仅有学习，还有生活",
    "home_page_url": "https://prehitting.gitee.io",
    "items": [
        {
            "id": "https://prehitting.gitee.io/2022/05/18/Redis/Jedis/",
            "url": "https://prehitting.gitee.io/2022/05/18/Redis/Jedis/",
            "title": "Jedis",
            "date_published": "2022-05-18T07:51:30.000Z",
            "content_html": "<h2 id=\"jedis\"><a class=\"markdownIt-Anchor\" href=\"#jedis\">#</a> Jedis</h2>\n<blockquote>\n<p>官方推荐的 Java 连接开发工具</p>\n</blockquote>\n<ol>\n<li>导入依赖</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>redis.clients<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jedis<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>4.2.3<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.alibaba<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>fastjson<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.0.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>test</li>\n</ol>\n<p><strong>创建 Jedis 对象即可使用 redis 的全部命令</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestPing</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//1. new Jedis对象</span></span><br><span class=\"line\">        <span class=\"type\">Jedis</span> <span class=\"variable\">jedis</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Jedis</span>(<span class=\"string\">&quot;127.0.0.1&quot;</span>, <span class=\"number\">6379</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 可以使用Redis的所有命令</span></span><br><span class=\"line\">        System.out.println(jedis.ping());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"常用api\"><a class=\"markdownIt-Anchor\" href=\"#常用api\">#</a> 常用 API</h2>\n<hr>\n<p>所有的命令都不变</p>\n<p>String</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestPing</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//1. new Jedis对象</span></span><br><span class=\"line\">        <span class=\"type\">Jedis</span> <span class=\"variable\">jedis</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Jedis</span>(<span class=\"string\">&quot;127.0.0.1&quot;</span>, <span class=\"number\">6379</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 可以使用Redis的所有命令</span></span><br><span class=\"line\">        System.out.println(jedis.ping());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;清空数据&quot;</span>+jedis.flushDB());</span><br><span class=\"line\">        jedis.set(<span class=\"string\">&quot;password&quot;</span>,<span class=\"string\">&quot;root&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;判断某个key是否存在&quot;</span>+jedis.exists(<span class=\"string\">&quot;username&quot;</span>));</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;新增键值对&quot;</span>+jedis.set(<span class=\"string\">&quot;username&quot;</span>,<span class=\"string\">&quot;YiMing&quot;</span>));</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;系统中的所有键值对：&quot;</span>);</span><br><span class=\"line\">        Set&lt;String&gt; keys = jedis.keys(<span class=\"string\">&quot;*&quot;</span>);</span><br><span class=\"line\">        System.out.println(keys);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;查看key对应的类型&quot;</span>+jedis.type(<span class=\"string\">&quot;password&quot;</span>));</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;随机返回key空间的一个&quot;</span>+jedis.randomKey());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;get值&quot;</span>+jedis.get(<span class=\"string\">&quot;password&quot;</span>));</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;重命名&quot;</span>+jedis.rename(<span class=\"string\">&quot;username&quot;</span>,<span class=\"string\">&quot;name&quot;</span>));</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;按索引查询&quot;</span>+jedis.select(<span class=\"number\">0</span>));</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;返回key的数目&quot;</span>+jedis.dbSize());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;删除键值对&quot;</span>+jedis.del(<span class=\"string\">&quot;name&quot;</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>List</p>\n<p>Set</p>\n<p>Hash</p>\n<p>Zset</p>\n<h2 id=\"事务处理\"><a class=\"markdownIt-Anchor\" href=\"#事务处理\">#</a> 事务处理</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.fastjson2.JSONObject;</span><br><span class=\"line\"><span class=\"comment\">//一定要手动导入这个包</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> redis.clients.jedis.Jedis;</span><br><span class=\"line\"><span class=\"keyword\">import</span> redis.clients.jedis.Transaction;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test02</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Jedis</span> <span class=\"variable\">jedis</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Jedis</span>(<span class=\"string\">&quot;127.0.0.1&quot;</span>, <span class=\"number\">6379</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        JSONObject jsonObject=<span class=\"keyword\">new</span> <span class=\"title class_\">JSONObject</span>();</span><br><span class=\"line\">        jsonObject.put(<span class=\"string\">&quot;username&quot;</span>,<span class=\"string\">&quot;YiMing&quot;</span>);</span><br><span class=\"line\">        jsonObject.put(<span class=\"string\">&quot;password&quot;</span>,<span class=\"string\">&quot;root&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">Transaction</span> <span class=\"variable\">transaction</span> <span class=\"operator\">=</span> jedis.multi();<span class=\"comment\">//开启事务</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> jsonObject.toJSONString();</span><br><span class=\"line\">        System.out.println(result);</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            transaction.set(<span class=\"string\">&quot;user1&quot;</span>,result);</span><br><span class=\"line\">            transaction.set(<span class=\"string\">&quot;user2&quot;</span>,result);</span><br><span class=\"line\">            transaction.exec();</span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span> (Exception e)&#123;</span><br><span class=\"line\">            transaction.discard();</span><br><span class=\"line\">        &#125;<span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            System.out.println(jedis.get(<span class=\"string\">&quot;user1&quot;</span>));</span><br><span class=\"line\">            System.out.println(jedis.get(<span class=\"string\">&quot;user2&quot;</span>));</span><br><span class=\"line\">            jedis.close();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"springboot整合\"><a class=\"markdownIt-Anchor\" href=\"#springboot整合\">#</a> Springboot 整合</h2>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">redis:</span></span><br><span class=\"line\">    <span class=\"attr\">host:</span> <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span></span><br><span class=\"line\">    <span class=\"attr\">port:</span> <span class=\"number\">6379</span></span><br><span class=\"line\">  <span class=\"attr\">datasource:</span></span><br><span class=\"line\">    <span class=\"attr\">url:</span> <span class=\"string\">jdbc:mysql://localhost:3306</span></span><br><span class=\"line\">    <span class=\"attr\">username:</span> <span class=\"string\">root</span></span><br><span class=\"line\">    <span class=\"attr\">password:</span> <span class=\"string\">root</span></span><br><span class=\"line\">    <span class=\"attr\">driver-class-name:</span> <span class=\"string\">com.mysql.cj.jdbc.Driver</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>Springboot 操作数据：Spring-data，jpa，mongodb，redis</p>\n</li>\n<li>\n<p>在 Springboot 2.x 之后，原来使用的 jedis 被替换为了 lettuce</p>\n<ul>\n<li>jedis：采用的直连，多个线程操作的话不安全，如果想要避免，使用 jedis pool 连接池  BIO</li>\n<li>lettuce：采用 netty，实例可以在多个线程中共享，不存在线程不安全的情况，可以减少线程数据了  NIO</li>\n</ul>\n</li>\n</ul>\n<p><strong>勉为其难地看看源码吧</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Bean</span></span><br><span class=\"line\">   <span class=\"meta\">@ConditionalOnMissingBean(</span></span><br><span class=\"line\"><span class=\"meta\">       name = &#123;&quot;redisTemplate&quot;&#125;</span></span><br><span class=\"line\"><span class=\"meta\">   )</span></span><br><span class=\"line\">   <span class=\"meta\">@ConditionalOnSingleCandidate(RedisConnectionFactory.class)</span></span><br><span class=\"line\">   <span class=\"keyword\">public</span> RedisTemplate&lt;Object, Object&gt; <span class=\"title function_\">redisTemplate</span><span class=\"params\">(RedisConnectionFactory redisConnectionFactory)</span> &#123;</span><br><span class=\"line\">       RedisTemplate&lt;Object, Object&gt; template = <span class=\"keyword\">new</span> <span class=\"title class_\">RedisTemplate</span>();</span><br><span class=\"line\">       template.setConnectionFactory(redisConnectionFactory);</span><br><span class=\"line\">       <span class=\"keyword\">return</span> template;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"meta\">@Bean</span></span><br><span class=\"line\">   <span class=\"meta\">@ConditionalOnMissingBean</span></span><br><span class=\"line\">   <span class=\"meta\">@ConditionalOnSingleCandidate(RedisConnectionFactory.class)</span></span><br><span class=\"line\">   <span class=\"keyword\">public</span> StringRedisTemplate <span class=\"title function_\">stringRedisTemplate</span><span class=\"params\">(RedisConnectionFactory redisConnectionFactory)</span> &#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StringRedisTemplate</span>(redisConnectionFactory);</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<p><strong>Test</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@SpringBootTest</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">RedisSpringbootApplicationTests</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//来自RedisAutoConfig</span></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> RedisTemplate redisTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">contextLoads</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//redisTemplate 操作不同的数据类型，api和指令一致</span></span><br><span class=\"line\">        <span class=\"comment\">//redisTemplate.opsForValue  操作字符串</span></span><br><span class=\"line\">        <span class=\"comment\">//opsForSet</span></span><br><span class=\"line\">        <span class=\"comment\">//opsForHash</span></span><br><span class=\"line\">        <span class=\"comment\">//opsForZSet</span></span><br><span class=\"line\">        <span class=\"comment\">//opsForGeo</span></span><br><span class=\"line\">        <span class=\"comment\">//opsForHyperLogLog</span></span><br><span class=\"line\">        <span class=\"comment\">//除了基本操作，我们常用的方法都可以直接通过redisTemplate操作，比如事务和CRUD</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//获取redis连接对象</span></span><br><span class=\"line\">        <span class=\"type\">RedisConnection</span> <span class=\"variable\">redisConnection</span> <span class=\"operator\">=</span> redisTemplate.getConnectionFactory().getConnection();</span><br><span class=\"line\">        redisConnection.flushDb();</span><br><span class=\"line\">        redisConnection.flushAll();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">-+</span><br></pre></td></tr></table></figure>\n<h3 id=\"自定义redistemplate\"><a class=\"markdownIt-Anchor\" href=\"#自定义redistemplate\">#</a> 自定义 RedisTemplate</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">RedisConfig</span> &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">\t<span class=\"meta\">@Bean</span></span><br><span class=\"line\">\t<span class=\"meta\">@SuppressWarnings(&quot;all&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> RedisTemplate&lt;String, Object&gt; <span class=\"title function_\">redisTemplate</span><span class=\"params\">(RedisConnectionFactory factory)</span> &#123;</span><br><span class=\"line\">    \tRedisTemplate&lt;String, Object&gt; template = <span class=\"keyword\">new</span> <span class=\"title class_\">RedisTemplate</span>&lt;String, Object&gt;();</span><br><span class=\"line\">    \ttemplate.setConnectionFactory(factory);</span><br><span class=\"line\">\t\t<span class=\"type\">Jackson2JsonRedisSerializer</span> <span class=\"variable\">jackson2JsonRedisSerializer</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Jackson2JsonRedisSerializer</span>(Object.class);</span><br><span class=\"line\">        <span class=\"type\">ObjectMapper</span> <span class=\"variable\">om</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ObjectMapper</span>();</span><br><span class=\"line\">        om.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);</span><br><span class=\"line\">        om.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);</span><br><span class=\"line\">        jackson2JsonRedisSerializer.setObjectMapper(om);</span><br><span class=\"line\">        <span class=\"type\">StringRedisSerializer</span> <span class=\"variable\">stringRedisSerializer</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StringRedisSerializer</span>();</span><br><span class=\"line\">        <span class=\"comment\">// key采用String的序列化方式</span></span><br><span class=\"line\">        template.setKeySerializer(stringRedisSerializer);</span><br><span class=\"line\">        <span class=\"comment\">// hash的key也采用String的序列化方式</span></span><br><span class=\"line\">        template.setHashKeySerializer(stringRedisSerializer);</span><br><span class=\"line\">        <span class=\"comment\">// value序列化方式采用jackson</span></span><br><span class=\"line\">        template.setValueSerializer(jackson2JsonRedisSerializer);</span><br><span class=\"line\">        <span class=\"comment\">// hash的value序列化方式采用jackson</span></span><br><span class=\"line\">        template.setHashValueSerializer(jackson2JsonRedisSerializer);</span><br><span class=\"line\">        template.afterPropertiesSet();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> template;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"redis工具类\"><a class=\"markdownIt-Anchor\" href=\"#redis工具类\">#</a> Redis 工具类</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">class</span> <span class=\"title class_\">RedisUtil</span> &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"meta\">@Autowired</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> RedisTemplate&lt;String, Object&gt; redisTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// =============================common============================</span></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 指定缓存失效时间</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> time 时间(秒)</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">expire</span><span class=\"params\">(String key, <span class=\"type\">long</span> time)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (time &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\tredisTemplate.expire(key, time, TimeUnit.SECONDS);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 根据key 获取过期时间</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> key 键 不能为null</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span> 时间(秒) 返回0代表为永久有效</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"type\">long</span> <span class=\"title function_\">getExpire</span><span class=\"params\">(String key)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> redisTemplate.getExpire(key, TimeUnit.SECONDS);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 判断key是否存在</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span> true 存在 false不存在</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">hasKey</span><span class=\"params\">(String key)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> redisTemplate.hasKey(key);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 删除缓存</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> key 可以传一个值 或多个</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"meta\">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">del</span><span class=\"params\">(String... key)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (key != <span class=\"literal\">null</span> &amp;&amp; key.length &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (key.length == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">\t\t\t\tredisTemplate.delete(key[<span class=\"number\">0</span>]);</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\tredisTemplate.delete(CollectionUtils.arrayToList(key));</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// ============================String=============================</span></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 普通缓存获取</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span> 值</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> Object <span class=\"title function_\">get</span><span class=\"params\">(String key)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"type\">return</span> <span class=\"variable\">key</span> <span class=\"operator\">=</span>= <span class=\"literal\">null</span> ? <span class=\"literal\">null</span> : redisTemplate.opsForValue().get(key);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 普通缓存放入</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> value 值</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span> true成功 false失败</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">set</span><span class=\"params\">(String key, Object value)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\tredisTemplate.opsForValue().set(key, value);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 普通缓存放入并设置时间</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> value 值</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> time 时间(秒) time要大于0 如果time小于等于0 将设置无限期</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span> true成功 false 失败</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">set</span><span class=\"params\">(String key, Object value, <span class=\"type\">long</span> time)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (time &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\tredisTemplate.opsForValue().set(key, value, time, TimeUnit.SECONDS);</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\tset(key, value);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 递增</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> delta 要增加几(大于0)</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"type\">long</span> <span class=\"title function_\">incr</span><span class=\"params\">(String key, <span class=\"type\">long</span> delta)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (delta &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(<span class=\"string\">&quot;递增因子必须大于0&quot;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> redisTemplate.opsForValue().increment(key, delta);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 递减</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> delta 要减少几(小于0)</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"type\">long</span> <span class=\"title function_\">decr</span><span class=\"params\">(String key, <span class=\"type\">long</span> delta)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (delta &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(<span class=\"string\">&quot;递减因子必须大于0&quot;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> redisTemplate.opsForValue().increment(key, -delta);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// ================================Map=================================</span></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * HashGet</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> key 键 不能为null</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> item 项 不能为null</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span> 值</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> Object <span class=\"title function_\">hget</span><span class=\"params\">(String key, String item)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> redisTemplate.opsForHash().get(key, item);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 获取hashKey对应的所有键值</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span> 对应的多个键值</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> Map&lt;Object, Object&gt; <span class=\"title function_\">hmget</span><span class=\"params\">(String key)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> redisTemplate.opsForHash().entries(key);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * HashSet</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> map 对应多个键值</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span> true 成功 false 失败</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">hmset</span><span class=\"params\">(String key, Map&lt;String, Object&gt; map)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\tredisTemplate.opsForHash().putAll(key, map);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * HashSet 并设置时间</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> map 对应多个键值</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> time 时间(秒)</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span> true成功 false失败</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">hmset</span><span class=\"params\">(String key, Map&lt;String, Object&gt; map, <span class=\"type\">long</span> time)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\tredisTemplate.opsForHash().putAll(key, map);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (time &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\texpire(key, time);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 向一张hash表中放入数据,如果不存在将创建</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> item 项</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> value 值</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span> true 成功 false失败</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">hset</span><span class=\"params\">(String key, String item, Object value)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\tredisTemplate.opsForHash().put(key, item, value);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 向一张hash表中放入数据,如果不存在将创建</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> item 项</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> value 值</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> time 时间(秒) 注意:如果已存在的hash表有时间,这里将会替换原有的时间</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span> true 成功 false失败</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">hset</span><span class=\"params\">(String key, String item, Object value, <span class=\"type\">long</span> time)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\tredisTemplate.opsForHash().put(key, item, value);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (time &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\texpire(key, time);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 删除hash表中的值</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> key 键 不能为null</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> item 项 可以使多个 不能为null</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">hdel</span><span class=\"params\">(String key, Object... item)</span> &#123;</span><br><span class=\"line\">\t\tredisTemplate.opsForHash().delete(key, item);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 判断hash表中是否有该项的值</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> key 键 不能为null</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> item 项 不能为null</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span> true 存在 false不存在</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">hHasKey</span><span class=\"params\">(String key, String item)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> redisTemplate.opsForHash().hasKey(key, item);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * hash递增 如果不存在,就会创建一个 并把新增后的值返回</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> item 项</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> by 要增加几(大于0)</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"type\">double</span> <span class=\"title function_\">hincr</span><span class=\"params\">(String key, String item, <span class=\"type\">double</span> by)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> redisTemplate.opsForHash().increment(key, item, by);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * hash递减</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> item 项</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> by 要减少记(小于0)</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"type\">double</span> <span class=\"title function_\">hdecr</span><span class=\"params\">(String key, String item, <span class=\"type\">double</span> by)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> redisTemplate.opsForHash().increment(key, item, -by);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// ============================set=============================</span></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 根据key获取Set中的所有值</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> Set&lt;Object&gt; <span class=\"title function_\">sGet</span><span class=\"params\">(String key)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> redisTemplate.opsForSet().members(key);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 根据value从一个set中查询,是否存在</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> value 值</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span> true 存在 false不存在</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">sHasKey</span><span class=\"params\">(String key, Object value)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> redisTemplate.opsForSet().isMember(key, value);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 将数据放入set缓存</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> values 值 可以是多个</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span> 成功个数</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"type\">long</span> <span class=\"title function_\">sSet</span><span class=\"params\">(String key, Object... values)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> redisTemplate.opsForSet().add(key, values);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 将set数据放入缓存</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> time 时间(秒)</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> values 值 可以是多个</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span> 成功个数</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"type\">long</span> <span class=\"title function_\">sSetAndTime</span><span class=\"params\">(String key, <span class=\"type\">long</span> time, Object... values)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">Long</span> <span class=\"variable\">count</span> <span class=\"operator\">=</span> redisTemplate.opsForSet().add(key, values);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (time &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\texpire(key, time);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> count;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 获取set缓存的长度</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"type\">long</span> <span class=\"title function_\">sGetSetSize</span><span class=\"params\">(String key)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> redisTemplate.opsForSet().size(key);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 移除值为value的</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> values 值 可以是多个</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span> 移除的个数</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"type\">long</span> <span class=\"title function_\">setRemove</span><span class=\"params\">(String key, Object... values)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">Long</span> <span class=\"variable\">count</span> <span class=\"operator\">=</span> redisTemplate.opsForSet().remove(key, values);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> count;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">// ===============================list=================================</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 获取list缓存的内容</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> start 开始</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> end 结束 0 到 -1代表所有值</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> List&lt;Object&gt; <span class=\"title function_\">lGet</span><span class=\"params\">(String key, <span class=\"type\">long</span> start, <span class=\"type\">long</span> end)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> redisTemplate.opsForList().range(key, start, end);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 获取list缓存的长度</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"type\">long</span> <span class=\"title function_\">lGetListSize</span><span class=\"params\">(String key)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> redisTemplate.opsForList().size(key);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 通过索引 获取list中的值</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> index 索引 index&gt;=0时， 0 表头，1 第二个元素，依次类推；index&lt;0时，-1，表尾，-2倒数第二个元素，依次类推</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> Object <span class=\"title function_\">lGetIndex</span><span class=\"params\">(String key, <span class=\"type\">long</span> index)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> redisTemplate.opsForList().index(key, index);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 将list放入缓存</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> value 值</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> time 时间(秒)</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">lSet</span><span class=\"params\">(String key, Object value)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\tredisTemplate.opsForList().rightPush(key, value);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 将list放入缓存</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> value 值</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> time 时间(秒)</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">lSet</span><span class=\"params\">(String key, Object value, <span class=\"type\">long</span> time)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\tredisTemplate.opsForList().rightPush(key, value);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (time &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\texpire(key, time);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 将list放入缓存</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> value 值</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> time 时间(秒)</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">lSet</span><span class=\"params\">(String key, List&lt;Object&gt; value)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\tredisTemplate.opsForList().rightPushAll(key, value);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 将list放入缓存</span></span><br><span class=\"line\"><span class=\"comment\">\t * </span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> value 值</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> time 时间(秒)</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">lSet</span><span class=\"params\">(String key, List&lt;Object&gt; value, <span class=\"type\">long</span> time)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\tredisTemplate.opsForList().rightPushAll(key, value);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (time &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\texpire(key, time);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 根据索引修改list中的某条数据</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> index 索引</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> value 值</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">lUpdateIndex</span><span class=\"params\">(String key, <span class=\"type\">long</span> index, Object value)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\tredisTemplate.opsForList().set(key, index, value);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 移除N个值为value</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> count 移除多少个</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> value 值</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span> 移除的个数</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"type\">long</span> <span class=\"title function_\">lRemove</span><span class=\"params\">(String key, <span class=\"type\">long</span> count, Object value)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">Long</span> <span class=\"variable\">remove</span> <span class=\"operator\">=</span> redisTemplate.opsForList().remove(key, count, value);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> remove;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "Redis",
                "Jedis"
            ]
        }
    ]
}