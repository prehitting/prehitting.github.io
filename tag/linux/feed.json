{
    "version": "https://jsonfeed.org/version/1",
    "title": "不利索の鸣 • All posts by \"linux\" tag",
    "description": "欢迎来到鸣崽的空间，这里不仅有学习，还有生活",
    "home_page_url": "https://prehitting.gitee.io",
    "items": [
        {
            "id": "https://prehitting.gitee.io/2022/05/10/linux/linux-huan-jing-an-zhuang/",
            "url": "https://prehitting.gitee.io/2022/05/10/linux/linux-huan-jing-an-zhuang/",
            "title": "Linux环境安装",
            "date_published": "2022-05-10T14:27:08.000Z",
            "content_html": "<h2 id=\"jdk安装\"><a class=\"markdownIt-Anchor\" href=\"#jdk安装\">#</a> JDK 安装</h2>\n<ol>\n<li>\n<p>卸载 centos7 自带的 openjdk</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">yum list installed |grep java\n\nrpm -e --nodeps <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>安装 jdk</p>\n<p>2.1 yum 安装 jdk</p>\n<p>​\t<strong>以下命令查找能够安装的 jdk 版本</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">yum -y list java*<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>​\t定位到 /usr/local/java/ 安装 openJDK</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">yum install -y java-1.8.0-openjdk<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n</ol>\n",
            "tags": [
                "Linux"
            ]
        },
        {
            "id": "https://prehitting.gitee.io/2022/05/09/linux/vim-bian-ji-qi/",
            "url": "https://prehitting.gitee.io/2022/05/09/linux/vim-bian-ji-qi/",
            "title": "Vim编辑器",
            "date_published": "2022-05-09T08:34:45.000Z",
            "content_html": "<p><img src=\"/2022/05/09/linux/vim-bian-ji-qi/image-20220509163720196-16520854463721.png\" alt=\"image-20220509163720196\"></p>\n<h2 id=\"vivim-的使用\"><a class=\"markdownIt-Anchor\" href=\"#vivim-的使用\">#</a> vi/vim 的使用</h2>\n<p>基本上 vi/vim 共分为三种模式，分别是<strong>命令模式（Command mode）</strong>，<strong>输入模式（Insert mode）<strong>和</strong>底线命令模式（Last line mode）</strong>。 这三种模式的作用分别是：</p>\n<h3 id=\"命令模式\"><a class=\"markdownIt-Anchor\" href=\"#命令模式\">#</a> 命令模式：</h3>\n<p>用户刚刚启动 vi/vim，便进入了命令模式。</p>\n<p>此状态下敲击键盘动作会被 Vim 识别为命令，而非输入字符。比如我们此时按下 i，并不会输入一个字符，i 被当作了一个命令。</p>\n<p>以下是常用的几个命令：</p>\n<ul>\n<li><strong>i</strong> 切换到输入模式，以输入字符。</li>\n<li><strong>x</strong> 删除当前光标所在处的字符。</li>\n<li><strong>:</strong> 切换到底线命令模式，以在最底一行输入命令。</li>\n</ul>\n<p>若想要编辑文本：启动 Vim，进入了命令模式，按下 i，切换到输入模式。</p>\n<p>命令模式只有一些最基本的命令，因此仍要依靠底线命令模式输入更多命令。</p>\n<h3 id=\"输入模式\"><a class=\"markdownIt-Anchor\" href=\"#输入模式\">#</a> 输入模式</h3>\n<p>在命令模式下按下 i 就进入了输入模式。</p>\n<p>在输入模式中，可以使用以下按键：</p>\n<ul>\n<li><strong>字符按键以及 Shift 组合</strong>，输入字符</li>\n<li><strong>ENTER</strong>，回车键，换行</li>\n<li><strong>BACK SPACE</strong>，退格键，删除光标前一个字符</li>\n<li><strong>DEL</strong>，删除键，删除光标后一个字符</li>\n<li><strong>方向键</strong>，在文本中移动光标</li>\n<li><strong>HOME</strong>/<strong>END</strong>，移动光标到行首 / 行尾</li>\n<li><strong>Page Up</strong>/<strong>Page Down</strong>，上 / 下翻页</li>\n<li><strong>Insert</strong>，切换光标为输入 / 替换模式，光标将变成竖线 / 下划线</li>\n<li><strong>ESC</strong>，退出输入模式，切换到命令模式</li>\n</ul>\n<h3 id=\"底线命令模式\"><a class=\"markdownIt-Anchor\" href=\"#底线命令模式\">#</a> 底线命令模式</h3>\n<p>在命令模式下按下:（英文冒号）就进入了底线命令模式。</p>\n<p>底线命令模式可以输入单个或多个字符的命令，可用的命令非常多。</p>\n<p>在底线命令模式中，基本的命令有（已经省略了冒号）：</p>\n<ul>\n<li>q 退出程序</li>\n<li>w 保存文件</li>\n</ul>\n<p>按 ESC 键可随时退出底线命令模式。</p>\n<blockquote>\n<p>使用  vim filename 命令</p>\n</blockquote>\n<h2 id=\"vivim-按键说明\"><a class=\"markdownIt-Anchor\" href=\"#vivim-按键说明\">#</a> vi/vim 按键说明</h2>\n<p>除了上面简易范例的 i, Esc, :wq 之外，其实 vim 还有非常多的按键可以使用。</p>\n<h3 id=\"第一部分一般模式可用的光标移动-复制粘贴-搜索替换等\"><a class=\"markdownIt-Anchor\" href=\"#第一部分一般模式可用的光标移动-复制粘贴-搜索替换等\">#</a> 第一部分：一般模式可用的光标移动、复制粘贴、搜索替换等</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">移动光标的方法</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">h 或 向左箭头键 (←)</td>\n<td>光标向左移动一个字符</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">j 或 向下箭头键 (↓)</td>\n<td>光标向下移动一个字符</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">k 或 向上箭头键 (↑)</td>\n<td>光标向上移动一个字符</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">l 或 向右箭头键 (→)</td>\n<td>光标向右移动一个字符</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">如果你将右手放在键盘上的话，你会发现 hjkl 是排列在一起的，因此可以使用这四个按钮来移动光标。 如果想要进行多次移动的话，例如向下移动 30 行，可以使用 “30j” 或 “30↓” 的组合按键， 亦即加上想要进行的次数 (数字) 后，按下动作即可！</td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">[Ctrl] + [f]</td>\n<td>屏幕『向下』移动一页，相当于 [Page Down] 按键 (常用)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">[Ctrl] + [b]</td>\n<td>屏幕『向上』移动一页，相当于 [Page Up] 按键 (常用)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">[Ctrl] + [d]</td>\n<td>屏幕『向下』移动半页</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">[Ctrl] + [u]</td>\n<td>屏幕『向上』移动半页</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">+</td>\n<td>光标移动到非空格符的下一行</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">-</td>\n<td>光标移动到非空格符的上一行</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">n<space></space></td>\n<td>那个 n 表示『数字』，例如 20 。按下数字后再按空格键，光标会向右移动这一行的 n 个字符。例如 20<space> 则光标会向后面移动 20 个字符距离。</space></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">0 或功能键 [Home]</td>\n<td>这是数字『 0 』：移动到这一行的最前面字符处 (常用)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$ 或功能键 [End]</td>\n<td>移动到这一行的最后面字符处 (常用)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">H</td>\n<td>光标移动到这个屏幕的最上方那一行的第一个字符</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">M</td>\n<td>光标移动到这个屏幕的中央那一行的第一个字符</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">L</td>\n<td>光标移动到这个屏幕的最下方那一行的第一个字符</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">G</td>\n<td>移动到这个档案的最后一行 (常用)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">nG</td>\n<td>n 为数字。移动到这个档案的第 n 行。例如 20G 则会移动到这个档案的第 20 行 (可配合 :set nu)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">gg</td>\n<td>移动到这个档案的第一行，相当于 1G 啊！ (常用)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">n<Enter></Enter></td>\n<td>n 为数字。光标向下移动 n 行 (常用)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">搜索替换</td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">/word</td>\n<td>向光标之下寻找一个名称为 word 的字符串。例如要在档案内搜寻 vbird 这个字符串，就输入 /vbird 即可！ (常用)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">?word</td>\n<td>向光标之上寻找一个字符串名称为 word 的字符串。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">n</td>\n<td>这个 n 是英文按键。代表重复前一个搜寻的动作。举例来说， 如果刚刚我们执行 /vbird 去向下搜寻 vbird 这个字符串，则按下 n 后，会向下继续搜寻下一个名称为 vbird 的字符串。如果是执行？vbird 的话，那么按下 n 则会向上继续搜寻名称为 vbird 的字符串！</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">N</td>\n<td>这个 N 是英文按键。与 n 刚好相反，为『反向』进行前一个搜寻动作。 例如 /vbird 后，按下 N 则表示『向上』搜寻 vbird 。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">使用 /word 配合 n 及 N 是非常有帮助的！可以让你重复的找到一些你搜寻的关键词！</td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">:n1,n2s/word1/word2/g</td>\n<td>n1 与 n2 为数字。在第 n1 与 n2 行之间寻找 word1 这个字符串，并将该字符串取代为 word2 ！举例来说，在 100 到 200 行之间搜寻 vbird 并取代为 VBIRD 则： 『:100,200s/vbird/VBIRD/g』。(常用)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>:1,$s/word1/word2/g</strong> 或 <strong>:%s/word1/word2/g</strong></td>\n<td>从第一行到最后一行寻找 word1 字符串，并将该字符串取代为 word2 ！(常用)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>:1,$s/word1/word2/gc</strong> 或 <strong>:%s/word1/word2/gc</strong></td>\n<td>从第一行到最后一行寻找 word1 字符串，并将该字符串取代为 word2 ！且在取代前显示提示字符给用户确认 (confirm) 是否需要取代！(常用)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">删除、复制与贴上</td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">x, X</td>\n<td>在一行字当中，x 为向后删除一个字符 (相当于 [del] 按键)， X 为向前删除一个字符 (相当于 [backspace] 亦即是退格键) (常用)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">nx</td>\n<td>n 为数字，连续向后删除 n 个字符。举例来说，我要连续删除 10 个字符， 『10x』。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">dd</td>\n<td>剪切游标所在的那一整行 (常用)，用 p/P 可以粘贴。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">ndd</td>\n<td>n 为数字。剪切光标所在的向下 n 行，例如 20dd 则是剪切 20 行 (常用)，用 p/P 可以粘贴。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">d1G</td>\n<td>删除光标所在到第一行的所有数据</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">dG</td>\n<td>删除光标所在到最后一行的所有数据</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">d$</td>\n<td>删除游标所在处，到该行的最后一个字符</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">d0</td>\n<td>那个是数字的 0 ，删除游标所在处，到该行的最前面一个字符</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">yy</td>\n<td>复制游标所在的那一行 (常用)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">nyy</td>\n<td>n 为数字。复制光标所在的向下 n 行，例如 20yy 则是复制 20 行 (常用)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">y1G</td>\n<td>复制游标所在行到第一行的所有数据</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">yG</td>\n<td>复制游标所在行到最后一行的所有数据</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">y0</td>\n<td>复制光标所在的那个字符到该行行首的所有数据</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">y$</td>\n<td>复制光标所在的那个字符到该行行尾的所有数据</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">p, P</td>\n<td>p 为将已复制的数据在光标下一行贴上，P 则为贴在游标上一行！ 举例来说，我目前光标在第 20 行，且已经复制了 10 行数据。则按下 p 后， 那 10 行数据会贴在原本的 20 行之后，亦即由 21 行开始贴。但如果是按下 P 呢？ 那么原本的第 20 行会被推到变成 30 行。 (常用)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">J</td>\n<td>将光标所在行与下一行的数据结合成同一行</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">c</td>\n<td>重复删除多个数据，例如向下删除 10 行，[10cj]</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">u</td>\n<td>复原前一个动作。(常用)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">[Ctrl]+r</td>\n<td>重做上一个动作。(常用)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">这个 u 与 [Ctrl]+r 是很常用的指令！一个是复原，另一个则是重做一次～ 利用这两个功能按键，你的编辑，嘿嘿！很快乐的啦！</td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">.</td>\n<td>不要怀疑！这就是小数点！意思是重复前一个动作的意思。 如果你想要重复删除、重复贴上等等动作，按下小数点『.』就好了！ (常用)</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"第二部分一般模式切换到编辑模式的可用的按钮说明\"><a class=\"markdownIt-Anchor\" href=\"#第二部分一般模式切换到编辑模式的可用的按钮说明\">#</a> 第二部分：一般模式切换到编辑模式的可用的按钮说明</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">进入输入或取代的编辑模式</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">i, I</td>\n<td>进入输入模式 (Insert mode)： i 为『从目前光标所在处输入』， I 为『在目前所在行的第一个非空格符处开始输入』。 (常用)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">a, A</td>\n<td>进入输入模式 (Insert mode)： a 为『从目前光标所在的下一个字符处开始输入』， A 为『从光标所在行的最后一个字符处开始输入』。(常用)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">o, O</td>\n<td>进入输入模式 (Insert mode)： 这是英文字母 o 的大小写。o 为在目前光标所在的下一行处输入新的一行； O 为在目前光标所在的上一行处输入新的一行！(常用)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">r, R</td>\n<td>进入取代模式 (Replace mode)： r 只会取代光标所在的那一个字符一次；R 会一直取代光标所在的文字，直到按下 ESC 为止；(常用)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">上面这些按键中，在 vi 画面的左下角处会出现『–INSERT–』或『–REPLACE–』的字样。 由名称就知道该动作了吧！！特别注意的是，我们上面也提过了，你想要在档案里面输入字符时， 一定要在左下角处看到 INSERT 或 REPLACE 才能输入喔！</td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">[Esc]</td>\n<td>退出编辑模式，回到一般模式中 (常用)</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"第三部分一般模式切换到指令行模式的可用的按钮说明\"><a class=\"markdownIt-Anchor\" href=\"#第三部分一般模式切换到指令行模式的可用的按钮说明\">#</a> 第三部分：一般模式切换到指令行模式的可用的按钮说明</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">指令行的储存、离开等指令</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">:w</td>\n<td>将编辑的数据写入硬盘档案中 (常用)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">:w!</td>\n<td>若文件属性为『只读』时，强制写入该档案。不过，到底能不能写入， 还是跟你对该档案的档案权限有关啊！</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">:q</td>\n<td>离开 vi (常用)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">:q!</td>\n<td>若曾修改过档案，又不想储存，使用！为强制离开不储存档案。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">注意一下啊，那个惊叹号 (!) 在 vi 当中，常常具有『强制』的意思～</td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">:wq</td>\n<td>储存后离开，若为 :wq! 则为强制储存后离开 (常用)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">ZZ</td>\n<td>这是大写的 Z 喔！如果修改过，保存当前文件，然后退出！效果等同于 (保存并退出)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">ZQ</td>\n<td>不保存，强制退出。效果等同于 <strong>:q!</strong>。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">:w [filename]</td>\n<td>将编辑的数据储存成另一个档案（类似另存新档）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">:r [filename]</td>\n<td>在编辑的数据中，读入另一个档案的数据。亦即将 『filename』 这个档案内容加到游标所在行后面</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">:n1,n2 w [filename]</td>\n<td>将 n1 到 n2 的内容储存成 filename 这个档案。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">:! command</td>\n<td>暂时离开 vi 到指令行模式下执行 command 的显示结果！例如 『:! ls /home』即可在 vi 当中察看 /home 底下以 ls 输出的档案信息！</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">vim 环境的变更</td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">:set nu</td>\n<td>显示行号，设定之后，会在每一行的前缀显示该行的行号</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">:set nonu</td>\n<td>与 set nu 相反，为取消行号！</td>\n</tr>\n</tbody>\n</table>\n",
            "tags": [
                "Linux",
                "Vim"
            ]
        },
        {
            "id": "https://prehitting.gitee.io/2022/05/07/linux/linux-mu-lu-jie-gou/",
            "url": "https://prehitting.gitee.io/2022/05/07/linux/linux-mu-lu-jie-gou/",
            "title": "Linux目录结构",
            "date_published": "2022-05-07T08:10:17.000Z",
            "content_html": "<h2 id=\"目录结构\"><a class=\"markdownIt-Anchor\" href=\"#目录结构\">#</a> 目录结构</h2>\n<p><img src=\"/2022/05/07/linux/linux-mu-lu-jie-gou/image-20220507161042910-16519110450571.png\" alt=\"image-20220507161042910\"></p>\n<ul>\n<li>\n<p>/bin  ：</p>\n<p>​\tbin 是 Binaries (二进制文件) 的缩写，这个目录存放着最经常使用的命令。</p>\n</li>\n<li>\n<p>/boot:</p>\n<p>这里存放的是启动 Linux 时使用的一些核心文件，包括一些连接文件以及镜像文件。</p>\n</li>\n<li>\n<p>/dev:</p>\n<p>dev 是 Device (设备) 的缩写，该目录下存放的是 Linux 的外部设备，在 Linux 中访问设备的方式和访问文件的方式是相同的。</p>\n</li>\n<li>\n<p><mark><strong>/etc:</strong></mark></p>\n<p>etc 是 Etcetera (等等) 的缩写，这个目录用来存放所有的系统管理所需要的配置文件和子目录。</p>\n</li>\n<li>\n<p><mark>/home：</mark></p>\n<p>用户的主目录，在 Linux 中，每个用户都有一个自己的目录，一般该目录名是以用户的账号命名的，如上图中的 alice、bob 和 eve。</p>\n</li>\n<li>\n<p>/lib：<br>\nlib 是 Library (库) 的缩写这个目录里存放着系统最基本的动态连接共享库，其作用类似于 Windows 里的 DLL 文件。几乎所有的应用程序都需要用到这些共享库。</p>\n</li>\n<li>\n<p>/lost+found：<br>\n这个目录一般情况下是空的，当系统非法关机后，这里就存放了一些文件。（存放突然关机的一些文件）</p>\n</li>\n<li>\n<p>/media：<br>\nlinux 系统会自动识别一些设备，例如 U 盘、光驱等等，当识别后，Linux 会把识别的设备挂载到这个目录下。</p>\n</li>\n<li>\n<p>/mnt：<br>\n系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将光驱挂载在 /mnt/ 上，然后进入该目录就可以查看光驱里的内容了。</p>\n</li>\n<li>\n<p><mark>/opt：</mark><br>\nopt 是 optional (可选) 的缩写，这是给主机额外<strong>安装软件所摆放的目录</strong>。比如你安装一个 ORACLE 数据库则就可以放到这个目录下。默认是空的。</p>\n</li>\n<li>\n<p>/proc：<br>\nproc 是 Processes (进程) 的缩写，/proc 是一种伪文件系统（也即虚拟文件系统），存储的是当前内核运行状态的一系列特殊文件，这个目录是一个虚拟的目录，它是系统内存的映射，我们可以通过直接访问这个目录来获取系统信息。<br>\n这个目录的内容不在硬盘上而是在内存里，我们也可以直接修改里面的某些文件，比如可以通过下面的命令来屏蔽主机的 ping 命令，使别人无法 ping 你的机器：</p>\n</li>\n</ul>\n<ul>\n<li>\n<p><mark><strong>/root</strong>：</mark><br>\n该目录为系统管理员，也称作超级权限者的用户主目录。</p>\n</li>\n<li>\n<p><strong>/sbin</strong>：<br>\ns 就是 Super User 的意思，是 Superuser Binaries (超级用户的二进制文件) 的缩写，这里存放的是系统管理员使用的系统管理程序。</p>\n</li>\n<li>\n<p><strong>/selinux</strong>：<br>\n这个目录是 Redhat/CentOS 所特有的目录，Selinux 是一个安全机制，类似于 windows 的防火墙，但是这套机制比较复杂，这个目录就是存放 selinux 相关的文件的。</p>\n</li>\n<li>\n<p><strong>/srv</strong>：<br>\n该目录存放一些服务启动之后需要提取的数据。</p>\n</li>\n<li>\n<p><strong>/sys</strong>：</p>\n<p>这是 Linux2.6 内核的一个很大的变化。该目录下安装了 2.6 内核中新出现的一个文件系统 sysfs 。</p>\n<p>sysfs 文件系统集成了下面 3 种文件系统的信息：针对进程信息的 proc 文件系统、针对设备的 devfs 文件系统以及针对伪终端的 devpts 文件系统。</p>\n<p>该文件系统是内核设备树的一个直观反映。</p>\n<p>当一个内核对象被创建的时候，对应的文件和目录也在内核对象子系统中被创建。</p>\n</li>\n<li>\n<p><mark><strong>/tmp</strong>：</mark><br>\ntmp 是 temporary (临时) 的缩写这个目录是用来存放一些临时文件的。</p>\n</li>\n<li>\n<p><mark><strong>/usr</strong>：</mark><br>\nusr 是 unix shared resources (共享资源) 的缩写，这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似于 windows 下的 program files 目录。</p>\n</li>\n<li>\n<p><strong>/usr/bin：</strong><br>\n系统用户使用的应用程序。</p>\n</li>\n<li>\n<p><strong>/usr/sbin：</strong><br>\n超级用户使用的比较高级的管理程序和系统守护程序。</p>\n</li>\n<li>\n<p><strong>/usr/src：</strong><br>\n内核源代码默认的放置目录。</p>\n</li>\n<li>\n<p><strong>/var</strong>：<br>\nvar 是 variable (变量) 的缩写，这个目录中存放着在不断扩充着的东西，我们习惯将那些经常被修改的目录放在这个目录下。包括各种日志文件。</p>\n</li>\n<li>\n<p><strong>/run</strong>：<br>\n是一个临时文件系统，存储系统启动以来的信息。当系统重启时，这个目录下的文件应该被删掉或清除。如果你的系统上有 /var/run 目录，应该让它指向 run。</p>\n</li>\n</ul>\n",
            "tags": [
                "Linux"
            ]
        },
        {
            "id": "https://prehitting.gitee.io/2022/05/07/linux/linux-ming-ling/",
            "url": "https://prehitting.gitee.io/2022/05/07/linux/linux-ming-ling/",
            "title": "Linux命令",
            "date_published": "2022-05-07T06:03:47.000Z",
            "content_html": "<h2 id=\"常用命令\"><a class=\"markdownIt-Anchor\" href=\"#常用命令\">#</a> 常用命令</h2>\n<h3 id=\"系统关机重启\"><a class=\"markdownIt-Anchor\" href=\"#系统关机重启\">#</a> 系统关机 / 重启</h3>\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>简述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>sync</td>\n<td>将数据由内存同步到硬盘中</td>\n</tr>\n<tr>\n<td>shutdown</td>\n<td>关机指令</td>\n</tr>\n<tr>\n<td>shutdown -h 10</td>\n<td>十分钟后关机</td>\n</tr>\n<tr>\n<td>shutdown -h now</td>\n<td>立即关机</td>\n</tr>\n<tr>\n<td>shutdown -h 20:25</td>\n<td>指定时间关机</td>\n</tr>\n<tr>\n<td>shutdown -r now</td>\n<td>立即重启</td>\n</tr>\n<tr>\n<td>shutdown -r +10</td>\n<td>十分钟后重启</td>\n</tr>\n<tr>\n<td>reboot</td>\n<td>重启，等同于 shutdown  -r now</td>\n</tr>\n<tr>\n<td>halt</td>\n<td>关闭系统</td>\n</tr>\n<tr>\n<td>logout</td>\n<td>注销</td>\n</tr>\n<tr>\n<td>clear</td>\n<td>清屏</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"文件和目录\"><a class=\"markdownIt-Anchor\" href=\"#文件和目录\">#</a> 文件和目录</h3>\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>简述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ls /</td>\n<td>查看根目录</td>\n</tr>\n<tr>\n<td>cd root</td>\n<td>进入某个目录</td>\n</tr>\n<tr>\n<td>cd …</td>\n<td>目录回退</td>\n</tr>\n<tr>\n<td>ls</td>\n<td>查看目录中的文件</td>\n</tr>\n<tr>\n<td>mkdir  mydir</td>\n<td>创建文件夹</td>\n</tr>\n<tr>\n<td>ls -F</td>\n<td>查看目录中的文件</td>\n</tr>\n<tr>\n<td>ls -l</td>\n<td>查看文件和目录的详细资料</td>\n</tr>\n<tr>\n<td>ls -a</td>\n<td>显示隐藏文件</td>\n</tr>\n<tr>\n<td>rm -f file1</td>\n<td>删除 file1 文件</td>\n</tr>\n<tr>\n<td>rmdir dir1</td>\n<td>删除 dir1 目录</td>\n</tr>\n<tr>\n<td>rm -rf dir1</td>\n<td>删除 dir1 目录并删除其内容</td>\n</tr>\n<tr>\n<td>mv dir1 new_dir</td>\n<td>重命名 / 移动目录</td>\n</tr>\n<tr>\n<td>cp file1 file2</td>\n<td>复制一个文件</td>\n</tr>\n<tr>\n<td>cp dir/* .</td>\n<td>复制一个目录下的所有文件到当前工作目录</td>\n</tr>\n<tr>\n<td>cp -a dir1 dir2</td>\n<td>复制一个目录</td>\n</tr>\n<tr>\n<td>cd ~</td>\n<td>进入用户目录</td>\n</tr>\n<tr>\n<td>pwd</td>\n<td>显示当前用户所在的目录</td>\n</tr>\n<tr>\n<td>mkdir -p dir1/dir2/dir3</td>\n<td>递归（连续）创建目录</td>\n</tr>\n<tr>\n<td>ls -ll</td>\n<td>查看文件属性</td>\n</tr>\n<tr>\n<td>touch [filename]</td>\n<td>创建文件</td>\n</tr>\n<tr>\n<td>ln filename1 filename2</td>\n<td>创建链接 (硬链接)</td>\n</tr>\n<tr>\n<td>ln -s  filename1 filename2</td>\n<td>创建链接 (软链接：删除源文件后无法访问)</td>\n</tr>\n<tr>\n<td>echo  “text” &gt;&gt; file</td>\n<td>文件写入内容</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"文件搜索\"><a class=\"markdownIt-Anchor\" href=\"#文件搜索\">#</a> 文件搜索</h3>\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>简述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>find / -name file1</td>\n<td>从‘/’开始进入根文件系统搜索文件和目录</td>\n</tr>\n<tr>\n<td>find / -user user1</td>\n<td>搜索属于用户 ‘user1’ 的文件和目录</td>\n</tr>\n<tr>\n<td>find /home/user1 -name \\*.bin</td>\n<td>在目录 ‘/home/user1’ 中搜索带有’.bin’ 结尾的文件</td>\n</tr>\n<tr>\n<td>find /usr/bin -type f -atime +100</td>\n<td>搜索在过去 100 天内未被使用过的执行文件</td>\n</tr>\n<tr>\n<td>find /usr/bin -type f -mtime -10</td>\n<td>搜索在 10 天内被创建或者修改过的文件</td>\n</tr>\n<tr>\n<td>locate *.ps</td>\n<td>寻找以 ‘.ps’ 结尾的文件 - 先运行 ‘updatedb’ 命令</td>\n</tr>\n<tr>\n<td>whereis halt</td>\n<td>显示一个二进制文件、源码或 man 的位置</td>\n</tr>\n<tr>\n<td>which halt</td>\n<td>显示一个二进制文件或可执行文件的完整路径</td>\n</tr>\n<tr>\n<td>find / -name *.rpm -exec chmod 755 ‘{}’ ;</td>\n<td>搜索以 ‘.rpm’ 结尾的文件并定义其权限</td>\n</tr>\n<tr>\n<td>find / -xdev -name *.rpm</td>\n<td>搜索以 ‘.rpm’ 结尾的文件，忽略光驱、捷盘等可移动设备</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"文件属性\"><a class=\"markdownIt-Anchor\" href=\"#文件属性\">#</a> 文件属性</h3>\n<p>r : 4 可读</p>\n<p>w：2 可写</p>\n<p>x： 1 可执行</p>\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>简述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>chgrp [-R]  属组名  文件名</td>\n<td>更改文件属组（-R：递归更改）</td>\n</tr>\n<tr>\n<td>chown [-R] 属主名  <mark>或</mark>  chown [-R] 属主名：属组名 文件名</td>\n<td>更改文件属主，也可以同时更改属组</td>\n</tr>\n<tr>\n<td>chmod [-R] xyz 文件或目录（比如 chmod 777 file1，即最高权限）</td>\n<td>更改文件九个属性</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"文件内容查看\"><a class=\"markdownIt-Anchor\" href=\"#文件内容查看\">#</a> 文件内容查看</h3>\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>简述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>cat</td>\n<td>由第一行开始显示文件内容（concatenate）</td>\n</tr>\n<tr>\n<td>tac</td>\n<td>从最后一行开始显示</td>\n</tr>\n<tr>\n<td>nl</td>\n<td>显示的时候输出行号</td>\n</tr>\n<tr>\n<td>more</td>\n<td>分页显示（空格翻页）</td>\n</tr>\n<tr>\n<td>less</td>\n<td>和 more 类似，但可以往前翻页</td>\n</tr>\n<tr>\n<td>head</td>\n<td>只看头几行 (head -n 20  filename)</td>\n</tr>\n<tr>\n<td>tail</td>\n<td>只看尾几行</td>\n</tr>\n<tr>\n<td>q</td>\n<td>退出查看文件</td>\n</tr>\n<tr>\n<td>/</td>\n<td>查询字符串 (/set)（n 寻找下一个  ，N 寻找上一个）</td>\n</tr>\n<tr>\n<td>w</td>\n<td>保存文件（通常和 q 联合使用，即:wq, 保存并退出）</td>\n</tr>\n<tr>\n<td>vim filename</td>\n<td>vim 编辑文件</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"账号管理\"><a class=\"markdownIt-Anchor\" href=\"#账号管理\">#</a> 账号管理</h2>\n<blockquote>\n<p>useradd  -m  [用户名]</p>\n</blockquote>\n<ul>\n<li>-c comment 指定一段注释性描述。</li>\n<li>-d 目录 指定用户主目录，如果此目录不存在，则同时使用 - m 选项，可以创建主目录。</li>\n<li>-g 用户组 指定用户所属的用户组。</li>\n<li>-G 用户组，用户组 指定用户所属的附加组。</li>\n<li>-s Shell 文件 指定用户的登录 Shell。</li>\n<li>-u 用户号 指定用户的用户号，如果同时有 - o 选项，则可以重复使用其他用户的标识号。</li>\n</ul>\n<ul>\n<li>-m：自动创建这个用户的主目录 /home/ 用户名</li>\n</ul>\n<p>Linux 中一切皆文件，添加用户就是向某个文件中写入用户的信息</p>\n<blockquote>\n<p>userdel -r [用户名]</p>\n</blockquote>\n<p>删除用户并删除文件</p>\n<blockquote>\n<p>usermod  - 参数  [用户名]</p>\n</blockquote>\n<p>修改用户</p>\n<p>常用的选项包括 - c, -d, -m, -g, -G, -s, -u 以及 - o 等，这些选项的意义与 useradd 命令中的选项一样，可以为用户指定新的资源值。</p>\n<blockquote>\n<p>passwd 选项 用户名</p>\n</blockquote>\n<p>用户口令管理</p>\n<ul>\n<li>-l 锁定口令，即禁用账号。</li>\n<li>-u 口令解锁。</li>\n<li>-d 使账号无口令。</li>\n<li>-f 强迫用户下次登录时修改口令。</li>\n</ul>\n<h2 id=\"用户组管理\"><a class=\"markdownIt-Anchor\" href=\"#用户组管理\">#</a> 用户组管理</h2>\n<p>每个用户都有一个用户组，系统可以对一个用户组中的所有用户进行集中管理。不同 Linux 系统对用户组的规定有所不同，如 Linux 下的用户属于与它同名的用户组，这个用户组在创建用户时同时创建。</p>\n<p>用户组的管理涉及用户组的添加、删除和修改。组的增加、删除和修改实际上就是对 /etc/group 文件的更新。</p>\n<h3 id=\"1-增加一个新的用户组使用groupadd命令-其格式如下\"><a class=\"markdownIt-Anchor\" href=\"#1-增加一个新的用户组使用groupadd命令-其格式如下\">#</a> 1、增加一个新的用户组使用 groupadd 命令。其格式如下：</h3>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">groupadd 选项 用户组<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>可以使用的选项有：</p>\n<ul>\n<li>-g GID 指定新用户组的组标识号（GID）。</li>\n<li>-o 一般与 - g 选项同时使用，表示新用户组的 GID 可以与系统已有用户组的 GID 相同。</li>\n</ul>\n<h4 id=\"实例1\"><a class=\"markdownIt-Anchor\" href=\"#实例1\">#</a> 实例 1：</h4>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># groupadd group1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>此命令向系统中增加了一个新组 group1，新组的组标识号是在当前已有的最大组标识号的基础上加 1。</p>\n<h4 id=\"实例2\"><a class=\"markdownIt-Anchor\" href=\"#实例2\">#</a> 实例 2：</h4>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># groupadd -g 101 group2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>此命令向系统中增加了一个新组 group2，同时指定新组的组标识号是 101。</p>\n<h3 id=\"2-如果要删除一个已有的用户组使用groupdel命令其格式如下\"><a class=\"markdownIt-Anchor\" href=\"#2-如果要删除一个已有的用户组使用groupdel命令其格式如下\">#</a> 2、如果要删除一个已有的用户组，使用 groupdel 命令，其格式如下：</h3>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">groupdel 用户组<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"例如\"><a class=\"markdownIt-Anchor\" href=\"#例如\">#</a> 例如：</h4>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># groupdel group1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>此命令从系统中删除组 group1。</p>\n<h3 id=\"3-修改用户组的属性使用groupmod命令-其语法如下\"><a class=\"markdownIt-Anchor\" href=\"#3-修改用户组的属性使用groupmod命令-其语法如下\">#</a> 3、修改用户组的属性使用 groupmod 命令。其语法如下：</h3>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">groupmod 选项 用户组<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>常用的选项有：</p>\n<ul>\n<li>-g GID 为用户组指定新的组标识号。</li>\n<li>-o 与 - g 选项同时使用，用户组的新 GID 可以与系统已有用户组的 GID 相同。</li>\n<li>-n 新用户组 将用户组的名字改为新名字</li>\n</ul>\n<h4 id=\"实例1-2\"><a class=\"markdownIt-Anchor\" href=\"#实例1-2\">#</a> 实例 1：</h4>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># groupmod -g 102 group2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>此命令将组 group2 的组标识号修改为 102。</p>\n<h4 id=\"实例2-2\"><a class=\"markdownIt-Anchor\" href=\"#实例2-2\">#</a> 实例 2：</h4>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># groupmod –g 10000 -n group3 group2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>此命令将组 group2 的标识号改为 10000，组名修改为 group3。</p>\n<h3 id=\"4-如果一个用户同时属于多个用户组那么用户可以在用户组之间切换以便具有其他用户组的权限\"><a class=\"markdownIt-Anchor\" href=\"#4-如果一个用户同时属于多个用户组那么用户可以在用户组之间切换以便具有其他用户组的权限\">#</a> 4、如果一个用户同时属于多个用户组，那么用户可以在用户组之间切换，以便具有其他用户组的权限。</h3>\n<p>用户可以在登录后，使用命令 newgrp 切换到其他用户组，这个命令的参数就是目的用户组。例如：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ newgrp root<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这条命令将当前用户切换到 root 用户组，前提条件是 root 用户组确实是该用户的主组或附加组。类似于用户账号的管理，用户组的管理也可以通过集成的系统管理工具来完成。</p>\n<h2 id=\"磁盘管理\"><a class=\"markdownIt-Anchor\" href=\"#磁盘管理\">#</a> 磁盘管理</h2>\n<p>常用命令 df，du，fdisk</p>\n<h3 id=\"df命令\"><a class=\"markdownIt-Anchor\" href=\"#df命令\">#</a> df 命令</h3>\n<blockquote>\n<p>检查文件系统的磁盘空间占用情况。可以利用该命令来获硬盘被占用了多少空间，目前还剩下多少空间等信息。</p>\n</blockquote>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">df [-ahikHTm] [目录或文件名]<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>-a ：列出所有的文件系统，包括系统特有的 /proc 等文件系统；</li>\n<li>-k ：以 KBytes 的容量显示各文件系统；</li>\n<li>-m ：以 MBytes 的容量显示各文件系统；</li>\n<li>-h ：以人们较易阅读的 GBytes, MBytes, KBytes 等格式自行显示；</li>\n<li>-H ：以 M=1000K 取代 M=1024K 的进位方式；</li>\n<li>-T ：显示文件系统类型，连同该 partition 的 filesystem 名称 (例如 ext3) 也列出；</li>\n<li>-i ：不用硬盘容量，而以 inode 的数量来显示</li>\n</ul>\n<h3 id=\"du命令\"><a class=\"markdownIt-Anchor\" href=\"#du命令\">#</a> du 命令</h3>\n<p>对文件和目录磁盘使用的空间的查看</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">du [-ahskm] 文件或目录名称<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>-a ：列出所有的文件与目录容量，因为默认仅统计目录底下的文件量而已。</li>\n<li>-h ：以人们较易读的容量格式 (G/M) 显示；</li>\n<li>-s ：列出总量而已，而不列出每个各别的目录占用容量；</li>\n<li>-S ：不包括子目录下的总计，与 -s 有点差别。</li>\n<li>-k ：以 KBytes 列出容量显示；</li>\n<li>-m ：以 MBytes 列出容量显示；</li>\n</ul>\n<h3 id=\"fdisk命令\"><a class=\"markdownIt-Anchor\" href=\"#fdisk命令\">#</a> fdisk 命令</h3>\n<p>fdisk 是 Linux 的磁盘分区表操作工具</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">fdisk [-l] 装置名称<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"磁盘格式化\"><a class=\"markdownIt-Anchor\" href=\"#磁盘格式化\">#</a> 磁盘格式化</h3>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">mkfs [-t 文件系统格式] 装置文件名<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>-t ：可以接文件系统格式，例如 ext3, ext2, vfat 等 (系统有支持才会生效)</li>\n</ul>\n<h3 id=\"磁盘校验\"><a class=\"markdownIt-Anchor\" href=\"#磁盘校验\">#</a> 磁盘校验</h3>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">fsck [-t 文件系统][-ACay] 装置名称<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>-t : 给定档案系统的型式，若在 /etc/fstab 中已有定义或 kernel 本身已支援的则不需加上此参数</li>\n<li>-s : 依序一个一个地执行 fsck 的指令来检查</li>\n<li>-A : 对 /etc/fstab 中所有列出来的 分区（partition）做检查</li>\n<li>-C : 显示完整的检查进度</li>\n<li>-d : 打印出 e2fsck 的 debug 结果</li>\n<li>-p : 同时有 -A 条件时，同时有多个 fsck 的检查一起执行</li>\n<li>-R : 同时有 -A 条件时，省略 / 不检查</li>\n<li>-V : 详细显示模式</li>\n<li>-a : 如果检查有错则自动修复</li>\n<li>-r : 如果检查有错则由使用者回答是否修复</li>\n<li>-y : 选项指定检测每个文件是自动输入 yes，在不确定那些是不正常的时候，可以执行 # fsck -y 全部检查修复。</li>\n</ul>\n<h3 id=\"磁盘挂载和删除\"><a class=\"markdownIt-Anchor\" href=\"#磁盘挂载和删除\">#</a> 磁盘挂载和删除</h3>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">mount [-t 文件系统] [-L Label名] [-o 额外选项] [-n]  装置文件名  挂载点<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">umount [-fn] 装置文件名或挂载点<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>-f ：强制卸除！可用在类似网络文件系统 (NFS) 无法读取到的情况下；</li>\n<li>-n ：不升级 /etc/mtab 情况下卸除。</li>\n</ul>\n<h2 id=\"进程管理\"><a class=\"markdownIt-Anchor\" href=\"#进程管理\">#</a> 进程管理</h2>\n<blockquote>\n<p>ps -xx</p>\n</blockquote>\n<ul>\n<li>-a 显示当前终端运行的所有的进程信息</li>\n<li>-u 以用户的信息显示进程</li>\n<li>-x 显示后台运行进程的参数</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># ps -aux  查看所有进程\nps -aux | grep mysql  c\n# | 在linux中叫做管道符\n# grep 查找文件中符合条件的字符串<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n",
            "tags": [
                "Linux"
            ]
        }
    ]
}