{
    "version": "https://jsonfeed.org/version/1",
    "title": "不利索の鸣 • All posts by \"mybatisplus\" category",
    "description": "欢迎来到鸣崽的空间，这里不仅有学习，还有生活",
    "home_page_url": "https://prehitting.gitee.io",
    "items": [
        {
            "id": "https://prehitting.gitee.io/2022/06/04/mybatisplus-gong-gong-zi-duan-zi-dong-tian-chong/",
            "url": "https://prehitting.gitee.io/2022/06/04/mybatisplus-gong-gong-zi-duan-zi-dong-tian-chong/",
            "title": "mybatisplus公共字段自动填充",
            "date_published": "2022-06-04T09:16:23.000Z",
            "content_html": "<h2 id=\"需求分析\"><a class=\"markdownIt-Anchor\" href=\"#需求分析\">#</a> 需求分析</h2>\n<p>在开发中，表结构中往往存在相同的字段（如 createUser，updateUser，createTime，updateTime 等）</p>\n<p>每次接收到 http 请求后需要手动填充这些字段，非常非常麻烦</p>\n<p>于是，使用 mybaitsPlus 中字段自动填充策略简化开发</p>\n<h2 id=\"使用方法\"><a class=\"markdownIt-Anchor\" href=\"#使用方法\">#</a> 使用方法</h2>\n<p><strong>1. 在实体类上加注解 @TableField</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@TableField</span><span class=\"token punctuation\">(</span>fill <span class=\"token operator\">=</span> <span class=\"token class-name\">FieldFill</span><span class=\"token punctuation\">.</span>INSERT<span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">private</span> <span class=\"token class-name\">LocalDateTime</span> createTime<span class=\"token punctuation\">;</span>\n\n   <span class=\"token annotation punctuation\">@TableField</span><span class=\"token punctuation\">(</span>fill <span class=\"token operator\">=</span> <span class=\"token class-name\">FieldFill</span><span class=\"token punctuation\">.</span>INSERT_UPDATE<span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">private</span> <span class=\"token class-name\">LocalDateTime</span> updateTime<span class=\"token punctuation\">;</span>\n\n   <span class=\"token annotation punctuation\">@TableField</span><span class=\"token punctuation\">(</span>fill <span class=\"token operator\">=</span> <span class=\"token class-name\">FieldFill</span><span class=\"token punctuation\">.</span>INSERT<span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">private</span> <span class=\"token class-name\">Long</span> createUser<span class=\"token punctuation\">;</span>\n\n   <span class=\"token annotation punctuation\">@TableField</span><span class=\"token punctuation\">(</span>fill <span class=\"token operator\">=</span> <span class=\"token class-name\">FieldFill</span><span class=\"token punctuation\">.</span>INSERT_UPDATE<span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">private</span> <span class=\"token class-name\">Long</span> updateUser<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>2.</strong> 构建实现 MetaObjectHandler 的类</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">/**\n * 元数据对象处理器\n */</span>\n<span class=\"token annotation punctuation\">@Component</span>\n<span class=\"token annotation punctuation\">@Slf4j</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyMetaObjectHandler</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">MetaObjectHandler</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">/**\n     * 插入操作时自动填充\n     */</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">insertFill</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MetaObject</span> metaObject<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        \n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">/**\n     * 更新时自动填充\n     */</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">updateFill</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MetaObject</span> metaObject<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        \n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>其他类中执行 update，insert 等方法前会先将数据交由这个类处理（可以理解为 AOP）</p>\n<h3 id=\"如何将数据传递给自定义的处理器\"><a class=\"markdownIt-Anchor\" href=\"#如何将数据传递给自定义的处理器\">#</a> 如何将数据传递给自定义的处理器</h3>\n<p><mark>通过 ThreadLocal</mark></p>\n<p>一个用户通过浏览器访问数据，使用的是一个线程</p>\n<p><strong>什么是 ThreadLocal</strong></p>\n<blockquote>\n<p>它并不是一个 Thread，而是 Thread 的局部变量，当使用 ThreadLocal 维护变量时，ThreadLocal 为每个使用该变量的线程提供单独的<strong>变量副本</strong>，所以每个线程都可以独立地改变自己的副本，而不会影响其它线程所对应的副本。ThreadLocal 为每个线程提供单独一份存储空间，具有线程隔离的效果，只有在线程内才能获取到对应的值，线程外则不能访问。</p>\n</blockquote>\n<p><strong>ThreadLocal 常用方法</strong></p>\n<ul>\n<li>void set (T value) 设置当前线程局部变量的值</li>\n<li>T get（） 返回当前线程所对应的线程局部变量的值</li>\n</ul>\n<p><strong>因此</strong></p>\n<blockquote>\n<p>我们可以在 LoginCheckFilter 的 doFilter 方法中获取当前登录用户 id, 并调用 ThreadLocal 的 set 方法来设置当前线程的线程局部变量的值 (用户 id), 然后在 MyMetaObjectHandler 的 updateFill 方法中调用 ThreadLocal 的 get 方法来获得当前线程所对应的线程局部变量的值 (用户 id)。</p>\n</blockquote>\n<h2 id=\"实现步骤\"><a class=\"markdownIt-Anchor\" href=\"#实现步骤\">#</a> 实现步骤</h2>\n<ol>\n<li>编写 BaseContext 工具类，基于 ThreadLocal 封装的工具类</li>\n</ol>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">/**\n * 基于ThreadLocal封装工具类，用户保存和获取当前登录用户id\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BaseContext</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">ThreadLocal</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Long</span><span class=\"token punctuation\">></span></span> threadLocal <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ThreadLocal</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setCurrentId</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        threadLocal<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Long</span> <span class=\"token function\">getCurrentId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> threadLocal<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ol start=\"2\">\n<li>在 LoginCheckFilter 的 doFilter, 方法中调用 BaseContext 来设置当前登录用户的 id</li>\n</ol>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//3. 判断登录状态，若已登录则放行</span>\n<span class=\"token class-name\">Long</span> empId <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span><span class=\"token punctuation\">)</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">getSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"employee\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>empId<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"用户已登录，用户id为：&#123;&#125;\"</span><span class=\"token punctuation\">,</span>empId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">BaseContext</span><span class=\"token punctuation\">.</span><span class=\"token function\">setCurrentId</span><span class=\"token punctuation\">(</span>empId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    filterChain<span class=\"token punctuation\">.</span><span class=\"token function\">doFilter</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ol start=\"3\">\n<li>在 MyMetaObjectHandler 的方法中调用 BaseContext 获取登录用户的 id</li>\n</ol>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">/**\n * 元数据对象处理器\n */</span>\n<span class=\"token annotation punctuation\">@Component</span>\n<span class=\"token annotation punctuation\">@Slf4j</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyMetaObjectHandler</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">MetaObjectHandler</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">/**\n     * 插入操作时自动填充\n     */</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">insertFill</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MetaObject</span> metaObject<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        metaObject<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"createTime\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">LocalDateTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        metaObject<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"updateTime\"</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">LocalDateTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        metaObject<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"createUser\"</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">BaseContext</span><span class=\"token punctuation\">.</span><span class=\"token function\">getCurrentId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        metaObject<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"updateUser\"</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">BaseContext</span><span class=\"token punctuation\">.</span><span class=\"token function\">getCurrentId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n     * 更新时自动填充\n     */</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">updateFill</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MetaObject</span> metaObject<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        metaObject<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"updateTime\"</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">LocalDateTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        metaObject<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"updateUser\"</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">BaseContext</span><span class=\"token punctuation\">.</span><span class=\"token function\">getCurrentId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n",
            "tags": [
                "mybatisPlus"
            ]
        },
        {
            "id": "https://prehitting.gitee.io/2022/05/31/mybatisplus-fen-ye-cha-jian-pei-zhi/",
            "url": "https://prehitting.gitee.io/2022/05/31/mybatisplus-fen-ye-cha-jian-pei-zhi/",
            "title": "MybatisPlus分页插件配置",
            "date_published": "2022-05-31T10:54:38.000Z",
            "content_html": "<p><strong>创建 MybatisPlus 配置类</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">/**\n * 配置MP分页插件\n */</span>\n<span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyBatisPlusConfig</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">MybatisPlusInterceptor</span> <span class=\"token function\">mybatisPlusInterceptor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">MybatisPlusInterceptor</span> interceptor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MybatisPlusInterceptor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        interceptor<span class=\"token punctuation\">.</span><span class=\"token function\">addInnerInterceptor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">PaginationInnerInterceptor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> interceptor<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>service 层中增加方法</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//其中page是指定查询页数，pageSize是总页数，name是根据name模糊查询指定数据</span>\n<span class=\"token annotation punctuation\">@Override</span>\n   <span class=\"token keyword\">public</span> <span class=\"token class-name\">Page</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UserEntity</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getPage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> page<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> pageSize<span class=\"token punctuation\">,</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n       <span class=\"token class-name\">Page</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UserEntity</span><span class=\"token punctuation\">></span></span> pageInfo <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Page</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">,</span>pageSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token class-name\">LambdaQueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Employee</span><span class=\"token punctuation\">></span></span> wrapper <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LambdaQueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       wrapper<span class=\"token punctuation\">.</span><span class=\"token function\">like</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNotEmpty</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">Employee</span><span class=\"token operator\">::</span><span class=\"token function\">getName</span><span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token function\">page</span><span class=\"token punctuation\">(</span>pageInfo<span class=\"token punctuation\">,</span>wrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">return</span> pageInfo<span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>Controller 层中增加方法</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">/**\n     * 员工信息分页查询\n     * @param page 查询页\n     * @param pageSize 总页数\n     * @param name 条件查询\n     * @return Page\n     */</span>\n    <span class=\"token annotation punctuation\">@ApiOperation</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"分页查询\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/page\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">R</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Page</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Employee</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> <span class=\"token function\">page</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@ApiParam</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"查询页\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">int</span> page<span class=\"token punctuation\">,</span>\n                                  <span class=\"token annotation punctuation\">@ApiParam</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"总页数\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">int</span> pageSize<span class=\"token punctuation\">,</span>\n                                  <span class=\"token annotation punctuation\">@ApiParam</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"条件查询\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"page = &#123;&#125;,pageSize = &#123;&#125;,name = &#123;&#125;\"</span><span class=\"token punctuation\">,</span>page<span class=\"token punctuation\">,</span>pageSize<span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">Page</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">U</span> pageInfo <span class=\"token operator\">=</span> employeeService<span class=\"token punctuation\">.</span><span class=\"token function\">getPage</span><span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">,</span> pageSize<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">R</span><span class=\"token punctuation\">.</span><span class=\"token function\">success</span><span class=\"token punctuation\">(</span>pageInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n",
            "tags": [
                "MybatisPlus"
            ]
        }
    ]
}