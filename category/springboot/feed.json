{
    "version": "https://jsonfeed.org/version/1",
    "title": "不利索の鸣 • All posts by \"springboot\" category",
    "description": "欢迎来到鸣崽的空间，这里不仅有学习，还有生活",
    "home_page_url": "https://prehitting.gitee.io",
    "items": [
        {
            "id": "https://prehitting.gitee.io/2022/05/30/springboot-re-bu-shu/",
            "url": "https://prehitting.gitee.io/2022/05/30/springboot-re-bu-shu/",
            "title": "SpringBoot热部署配置",
            "date_published": "2022-05-30T01:29:28.000Z",
            "content_html": "<h2 id=\"使用devtool实现springboot热部署\"><a class=\"markdownIt-Anchor\" href=\"#使用devtool实现springboot热部署\">#</a> 使用 devTool 实现 Springboot 热部署</h2>\n<p>首先引入依赖项</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dependency<span class=\"token punctuation\">></span></span>\n\t<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">></span></span>org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">></span>\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">></span></span>spring<span class=\"token operator\">-</span>boot<span class=\"token operator\">-</span>devtools<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">></span>\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>scope<span class=\"token punctuation\">></span></span>runtime<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>scope<span class=\"token operator\">></span>\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>optional<span class=\"token punctuation\">></span></span><span class=\"token boolean\">true</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>optional<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependency<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>配置 application.yml</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token key atrule\">devtools</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span>\n    \t<span class=\"token key atrule\">enabled</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>  <span class=\"token comment\">#设置开启热部署</span>\n      \t<span class=\"token key atrule\">additional-paths</span><span class=\"token punctuation\">:</span> src/main/java <span class=\"token comment\">#重启目录</span>\n      \t<span class=\"token key atrule\">exclude</span><span class=\"token punctuation\">:</span> WEB<span class=\"token punctuation\">-</span>INF/<span class=\"token important\">**</span>  <span class=\"token comment\">#排除文件(不重启项目)</span>\n    <span class=\"token key atrule\">freemarker</span><span class=\"token punctuation\">:</span>\n    \t<span class=\"token key atrule\">cache</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\">#不加载缓存</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n",
            "tags": [
                "SpringBoot"
            ]
        },
        {
            "id": "https://prehitting.gitee.io/2022/05/06/springboot-lan-jie-qi-pei-zhi-fang-fa/",
            "url": "https://prehitting.gitee.io/2022/05/06/springboot-lan-jie-qi-pei-zhi-fang-fa/",
            "title": "SpringBoot拦截器配置方法",
            "date_published": "2022-05-06T05:29:28.000Z",
            "content_html": "<h2 id=\"项目需求\"><a class=\"markdownIt-Anchor\" href=\"#项目需求\">#</a> 项目需求</h2>\n<pre><code>在用户浏览部分页面前，检测用户是否已经登录过，若登录过，则允许访问，\n若未登陆过，则拦截目标页面的访问，并跳转至登录界面\n</code></pre>\n<h2 id=\"配置方法\"><a class=\"markdownIt-Anchor\" href=\"#配置方法\">#</a> 配置方法</h2>\n<h3 id=\"步骤一\"><a class=\"markdownIt-Anchor\" href=\"#步骤一\">#</a> 步骤一</h3>\n<p>创建 inteceptor 包，创建 LoginInteceptor 类</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LoginInterceptor</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">HandlerInterceptor</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token comment\">/**\n     * 检测全局session对象中是否有uid数据，如果有则放行，若没有则重定向到登陆界面\n     * @param request 请求对象\n     * @param response 响应对象\n     * @param handler 处理器（url+Controller，映射）\n     * @return true则放行，false拦截\n     * @throws Exception\n     */</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">preHandle</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">,</span>\n                             <span class=\"token class-name\">HttpServletResponse</span> response<span class=\"token punctuation\">,</span>\n                             <span class=\"token class-name\">Object</span> handler<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span>\n\n        <span class=\"token class-name\">Object</span> obj<span class=\"token operator\">=</span>request<span class=\"token punctuation\">.</span><span class=\"token function\">getSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"uid\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>obj<span class=\"token operator\">==</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">//用户没有登录过系统</span>\n            response<span class=\"token punctuation\">.</span><span class=\"token function\">sendRedirect</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/web/index.html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"步骤二\"><a class=\"markdownIt-Anchor\" href=\"#步骤二\">#</a> 步骤二</h3>\n<pre><code>在config包下创建LoginInterceptorConfig类实现WebMvcConfigure类注册拦截器\n</code></pre>\n<blockquote>\n<p>registry.addInterceptor () 用于注册拦截器<br>\n addPathPatterns (&quot;/**&quot;) 意为拦截所有页面，参数是需要拦截的页面<br>\n excludePathPatterns () 参数是不需要拦截的页面</p>\n</blockquote>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">/**\n * 拦截器注册\n */</span>\n<span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LoginInterceptorConfig</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">WebMvcConfigurer</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token class-name\">HandlerInterceptor</span> interceptor<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">LoginInterceptor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">addInterceptors</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">InterceptorRegistry</span> registry<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> patterns <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        patterns<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/bootstrap3/**\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        patterns<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/css/**\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        patterns<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/images/**\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        patterns<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/js/**\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        patterns<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/web/register.html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        patterns<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/web/index.html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        patterns<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/web/login.html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        patterns<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/web/product.html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        patterns<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/users/reg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        patterns<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/users/login\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        registry<span class=\"token punctuation\">.</span><span class=\"token function\">addInterceptor</span><span class=\"token punctuation\">(</span>interceptor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addPathPatterns</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/**\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">excludePathPatterns</span><span class=\"token punctuation\">(</span>patterns<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n",
            "tags": [
                "SpringBoot",
                "拦截器"
            ]
        },
        {
            "id": "https://prehitting.gitee.io/2022/05/06/springboot-chu-li-kua-yu-qing-qiu-de-ji-chong-fang-fa/",
            "url": "https://prehitting.gitee.io/2022/05/06/springboot-chu-li-kua-yu-qing-qiu-de-ji-chong-fang-fa/",
            "title": "SpringBoot处理跨域请求的几种方法",
            "date_published": "2022-05-06T05:28:22.000Z",
            "content_html": "<h2 id=\"error\"><a class=\"markdownIt-Anchor\" href=\"#error\">#</a> Error：</h2>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Access to XMLHttpRequest at &#39;http:&#x2F;&#x2F;localhost:8080&#x2F;store&#x2F;users&#x2F;reg&#39; from origin &#39;http:&#x2F;&#x2F;localhost:52972&#39; has been blocked by CORS policy: No &#39;Access-Control-Allow-Origin&#39; header is present on the requested resource.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"原因\"><a class=\"markdownIt-Anchor\" href=\"#原因\">#</a> 原因</h2>\n<blockquote>\n<p>浏览器出于安全考虑，使用 XMLHttpRequest 对象发起 HTTP 请求时必须遵守同源策略 (<strong>要求源相同才能正常进行通信，即协议，域名，端口号都完全一致</strong>)<br>\n 同源策略限制了从同一个源加载的文档或脚本如何与来自另一个源的资源进行交互。这是一个用于隔离潜在恶意文件的重要安全机制。</p>\n</blockquote>\n<h2 id=\"方案\"><a class=\"markdownIt-Anchor\" href=\"#方案\">#</a> 方案</h2>\n<h3 id=\"方案一-直接采用springboot的注解crossorigin支持springmvc\"><a class=\"markdownIt-Anchor\" href=\"#方案一-直接采用springboot的注解crossorigin支持springmvc\">#</a> 方案一 直接采用 SpringBoot 的注解 @CrossOrigin（支持 SpringMvc）</h3>\n<p>在 Control 层需要跨域的方法或类上增加注解 @CrossOrigin</p>\n<p><font color=\"red\">该注解可继承</font></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@RestController</span><span class=\"token comment\">//以json数据格式响应到前端</span>\n<span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/users\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserController</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseController</span><span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">IUserService</span> userService<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/reg\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@CrossOrigin</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">JsonResult</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Void</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">reg</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span> user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">JsonResult</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Void</span><span class=\"token punctuation\">></span></span> result<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">JsonResult</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        userService<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        result<span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        result<span class=\"token punctuation\">.</span><span class=\"token function\">setMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"注册成功\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"方法二-处理跨域请求的configuration\"><a class=\"markdownIt-Anchor\" href=\"#方法二-处理跨域请求的configuration\">#</a> 方法二、处理跨域请求的 Configuration</h3>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">增加一个配置类，CrossOriginConfig.java。继承WebMvcConfigurerAdapter或者实现WebMvcConfigurer接口，其他都不用管，项目启动时，会自动读取配置。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Configuration</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">CorsRegistry</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">WebMvcConfigurerAdapter</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * AJAX请求跨域\n * @author Mr.W\n * @time 2018-08-13\n */</span>\n<span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CorsConfig</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">WebMvcConfigurerAdapter</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> ORIGINS<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"PUT\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"DELETE\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">addCorsMappings</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CorsRegistry</span> registry<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        registry<span class=\"token punctuation\">.</span><span class=\"token function\">addMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/**\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">allowedOrigins</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">allowCredentials</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">allowedMethods</span><span class=\"token punctuation\">(</span>ORIGINS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">maxAge</span><span class=\"token punctuation\">(</span><span class=\"token number\">3600</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"方法三-采用过滤器filter的方式\"><a class=\"markdownIt-Anchor\" href=\"#方法三-采用过滤器filter的方式\">#</a> 方法三、采用过滤器（filter）的方式</h3>\n<blockquote>\n<p>同方法二加配置类，增加一个 CORSFilter 类，并实现 Filter 接口即可，其他都不用管，接口调用时，会过滤跨域的拦截。</p>\n</blockquote>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"> <span class=\"token annotation punctuation\">@Component</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CORSFilter</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Filter</span> <span class=\"token punctuation\">&#123;</span>\n\n<span class=\"token annotation punctuation\">@Override</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ServletRequest</span> request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ServletResponse</span> response<span class=\"token punctuation\">,</span> <span class=\"token class-name\">FilterChain</span> chain<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ServletException</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">HttpServletResponse</span> res <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletResponse</span><span class=\"token punctuation\">)</span> response<span class=\"token punctuation\">;</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">addHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Access-Control-Allow-Credentials\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"true\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">addHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Access-Control-Allow-Origin\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">addHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Access-Control-Allow-Methods\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"GET, POST, DELETE, PUT\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">addHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Access-Control-Allow-Headers\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Content-Type,X-CAF-Authorization-Token,sessionToken,X-TOKEN\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span><span class=\"token punctuation\">)</span> request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"OPTIONS\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        response<span class=\"token punctuation\">.</span><span class=\"token function\">getWriter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ok\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    chain<span class=\"token punctuation\">.</span><span class=\"token function\">doFilter</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token annotation punctuation\">@Override</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token annotation punctuation\">@Override</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FilterConfig</span> filterConfig<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">ServletException</span> <span class=\"token punctuation\">&#123;</span>\n\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n",
            "tags": [
                "SpringBoot"
            ]
        }
    ]
}