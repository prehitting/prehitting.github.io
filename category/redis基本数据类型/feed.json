{
    "version": "https://jsonfeed.org/version/1",
    "title": "不利索の鸣 • All posts by \"redis基本数据类型\" category",
    "description": "欢迎来到鸣崽的空间，这里不仅有学习，还有生活",
    "home_page_url": "https://prehitting.gitee.io",
    "items": [
        {
            "id": "https://prehitting.gitee.io/2022/05/17/redis/redis-ji-ben-shu-ju-lei-xing/redis-ming-ling-lie-biao-list/",
            "url": "https://prehitting.gitee.io/2022/05/17/redis/redis-ji-ben-shu-ju-lei-xing/redis-ming-ling-lie-biao-list/",
            "title": "Redis命令_列表（List）",
            "date_published": "2022-05-17T09:19:26.000Z",
            "content_html": "<h2 id=\"list命令\"><a class=\"markdownIt-Anchor\" href=\"#list命令\">#</a> List 命令</h2>\n<table>\n<thead>\n<tr>\n<th>1</th>\n<th>[BLPOP key1 <a href=\"https://www.runoob.com/redis/lists-blpop.html\">key2 ] timeout</a> 移出并获取列表的第一个元素， 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止。</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>2</td>\n<td>[BRPOP key1 <a href=\"https://www.runoob.com/redis/lists-brpop.html\">key2 ] timeout</a> 移出并获取列表的最后一个元素， 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止。</td>\n</tr>\n<tr>\n<td>3</td>\n<td><a href=\"https://www.runoob.com/redis/lists-brpoplpush.html\">BRPOPLPUSH source destination timeout</a> 从列表中弹出一个值，将弹出的元素插入到另外一个列表中并返回它； 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止。</td>\n</tr>\n<tr>\n<td>4</td>\n<td><a href=\"https://www.runoob.com/redis/lists-lindex.html\">LINDEX key index</a> 通过索引获取列表中的元素</td>\n</tr>\n<tr>\n<td>5</td>\n<td><a href=\"https://www.runoob.com/redis/lists-linsert.html\">LINSERT key BEFORE|AFTER pivot value</a> 在列表的元素前或者后插入元素</td>\n</tr>\n<tr>\n<td>6</td>\n<td><a href=\"https://www.runoob.com/redis/lists-llen.html\">LLEN key</a> 获取列表长度</td>\n</tr>\n<tr>\n<td>7</td>\n<td><a href=\"https://www.runoob.com/redis/lists-lpop.html\">LPOP key</a> 移出并获取列表的第一个元素</td>\n</tr>\n<tr>\n<td>8</td>\n<td>[LPUSH key value1 <a href=\"https://www.runoob.com/redis/lists-lpush.html\">value2]</a> 将一个或多个值插入到列表头部</td>\n</tr>\n<tr>\n<td>9</td>\n<td><a href=\"https://www.runoob.com/redis/lists-lpushx.html\">LPUSHX key value</a> 将一个值插入到已存在的列表头部</td>\n</tr>\n<tr>\n<td>10</td>\n<td><a href=\"https://www.runoob.com/redis/lists-lrange.html\">LRANGE key start stop</a> 获取列表指定范围内的元素</td>\n</tr>\n<tr>\n<td>11</td>\n<td><a href=\"https://www.runoob.com/redis/lists-lrem.html\">LREM key count value</a> 移除列表元素</td>\n</tr>\n<tr>\n<td>12</td>\n<td><a href=\"https://www.runoob.com/redis/lists-lset.html\">LSET key index value</a> 通过索引设置列表元素的值</td>\n</tr>\n<tr>\n<td>13</td>\n<td><a href=\"https://www.runoob.com/redis/lists-ltrim.html\">LTRIM key start stop</a> 对一个列表进行修剪 (trim)，就是说，让列表只保留指定区间内的元素，不在指定区间之内的元素都将被删除。</td>\n</tr>\n<tr>\n<td>14</td>\n<td><a href=\"https://www.runoob.com/redis/lists-rpop.html\">RPOP key</a> 移除列表的最后一个元素，返回值为移除的元素。</td>\n</tr>\n<tr>\n<td>15</td>\n<td><a href=\"https://www.runoob.com/redis/lists-rpoplpush.html\">RPOPLPUSH source destination</a> 移除列表的最后一个元素，并将该元素添加到另一个列表并返回</td>\n</tr>\n<tr>\n<td>16</td>\n<td>[RPUSH key value1 <a href=\"https://www.runoob.com/redis/lists-rpush.html\">value2]</a> 在列表中添加一个或多个值</td>\n</tr>\n<tr>\n<td>17</td>\n<td><a href=\"https://www.runoob.com/redis/lists-rpushx.html\">RPUSHX key value</a> 为已存在的列表添加值</td>\n</tr>\n</tbody>\n</table>\n",
            "tags": [
                "Redis"
            ]
        },
        {
            "id": "https://prehitting.gitee.io/2022/05/17/redis/redis-ji-ben-shu-ju-lei-xing/redis-ming-ling-you-xu-ji-he-sortedlist/",
            "url": "https://prehitting.gitee.io/2022/05/17/redis/redis-ji-ben-shu-ju-lei-xing/redis-ming-ling-you-xu-ji-he-sortedlist/",
            "title": "Redis命令_有序集合（SortedList）",
            "date_published": "2022-05-17T09:17:46.000Z",
            "content_html": "<h2 id=\"sortedlist\"><a class=\"markdownIt-Anchor\" href=\"#sortedlist\">#</a> SortedList</h2>\n<table>\n<thead>\n<tr>\n<th>1</th>\n<th>[ZADD key score1 member1 <a href=\"https://www.runoob.com/redis/sorted-sets-zadd.html\">score2 member2]</a> 向有序集合添加一个或多个成员，或者更新已存在成员的分数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>2</td>\n<td><a href=\"https://www.runoob.com/redis/sorted-sets-zcard.html\">ZCARD key</a> 获取有序集合的成员数</td>\n</tr>\n<tr>\n<td>3</td>\n<td><a href=\"https://www.runoob.com/redis/sorted-sets-zcount.html\">ZCOUNT key min max</a> 计算在有序集合中指定区间分数的成员数</td>\n</tr>\n<tr>\n<td>4</td>\n<td><a href=\"https://www.runoob.com/redis/sorted-sets-zincrby.html\">ZINCRBY key increment member</a> 有序集合中对指定成员的分数加上增量 increment</td>\n</tr>\n<tr>\n<td>5</td>\n<td>[ZINTERSTORE destination numkeys key <a href=\"https://www.runoob.com/redis/sorted-sets-zinterstore.html\">key …]</a> 计算给定的一个或多个有序集的交集并将结果集存储在新的有序集合 destination 中</td>\n</tr>\n<tr>\n<td>6</td>\n<td><a href=\"https://www.runoob.com/redis/sorted-sets-zlexcount.html\">ZLEXCOUNT key min max</a> 在有序集合中计算指定字典区间内成员数量</td>\n</tr>\n<tr>\n<td>7</td>\n<td>[ZRANGE key start stop <a href=\"https://www.runoob.com/redis/sorted-sets-zrange.html\">WITHSCORES]</a> 通过索引区间返回有序集合指定区间内的成员</td>\n</tr>\n<tr>\n<td>8</td>\n<td>[ZRANGEBYLEX key min max <a href=\"https://www.runoob.com/redis/sorted-sets-zrangebylex.html\">LIMIT offset count]</a> 通过字典区间返回有序集合的成员</td>\n</tr>\n<tr>\n<td>9</td>\n<td>[ZRANGEBYSCORE key min max <a href=\"https://www.runoob.com/redis/sorted-sets-zrangebyscore.html\">WITHSCORES] [LIMIT]</a> 通过分数返回有序集合指定区间内的成员</td>\n</tr>\n<tr>\n<td>10</td>\n<td><a href=\"https://www.runoob.com/redis/sorted-sets-zrank.html\">ZRANK key member</a> 返回有序集合中指定成员的索引</td>\n</tr>\n<tr>\n<td>11</td>\n<td>[ZREM key member <a href=\"https://www.runoob.com/redis/sorted-sets-zrem.html\">member …]</a> 移除有序集合中的一个或多个成员</td>\n</tr>\n<tr>\n<td>12</td>\n<td><a href=\"https://www.runoob.com/redis/sorted-sets-zremrangebylex.html\">ZREMRANGEBYLEX key min max</a> 移除有序集合中给定的字典区间的所有成员</td>\n</tr>\n<tr>\n<td>13</td>\n<td><a href=\"https://www.runoob.com/redis/sorted-sets-zremrangebyrank.html\">ZREMRANGEBYRANK key start stop</a> 移除有序集合中给定的排名区间的所有成员</td>\n</tr>\n<tr>\n<td>14</td>\n<td><a href=\"https://www.runoob.com/redis/sorted-sets-zremrangebyscore.html\">ZREMRANGEBYSCORE key min max</a> 移除有序集合中给定的分数区间的所有成员</td>\n</tr>\n<tr>\n<td>15</td>\n<td>[ZREVRANGE key start stop <a href=\"https://www.runoob.com/redis/sorted-sets-zrevrange.html\">WITHSCORES]</a> 返回有序集中指定区间内的成员，通过索引，分数从高到低</td>\n</tr>\n<tr>\n<td>16</td>\n<td>[ZREVRANGEBYSCORE key max min <a href=\"https://www.runoob.com/redis/sorted-sets-zrevrangebyscore.html\">WITHSCORES]</a> 返回有序集中指定分数区间内的成员，分数从高到低排序</td>\n</tr>\n<tr>\n<td>17</td>\n<td><a href=\"https://www.runoob.com/redis/sorted-sets-zrevrank.html\">ZREVRANK key member</a> 返回有序集合中指定成员的排名，有序集成员按分数值递减 (从大到小) 排序</td>\n</tr>\n<tr>\n<td>18</td>\n<td><a href=\"https://www.runoob.com/redis/sorted-sets-zscore.html\">ZSCORE key member</a> 返回有序集中，成员的分数值</td>\n</tr>\n<tr>\n<td>19</td>\n<td>[ZUNIONSTORE destination numkeys key <a href=\"https://www.runoob.com/redis/sorted-sets-zunionstore.html\">key …]</a> 计算给定的一个或多个有序集的并集，并存储在新的 key 中</td>\n</tr>\n<tr>\n<td>20</td>\n<td>[ZSCAN key cursor <a href=\"https://www.runoob.com/redis/sorted-sets-zscan.html\">MATCH pattern] [COUNT count]</a> 迭代有序集合中的元素（包括元素成员和元素分值）</td>\n</tr>\n</tbody>\n</table>\n",
            "tags": [
                "Redis"
            ]
        },
        {
            "id": "https://prehitting.gitee.io/2022/05/17/redis/redis-ji-ben-shu-ju-lei-xing/redis-ming-ling-ji-he-set/",
            "url": "https://prehitting.gitee.io/2022/05/17/redis/redis-ji-ben-shu-ju-lei-xing/redis-ming-ling-ji-he-set/",
            "title": "Redis命令_集合（Set）",
            "date_published": "2022-05-17T09:13:14.000Z",
            "content_html": "<h2 id=\"set命令\"><a class=\"markdownIt-Anchor\" href=\"#set命令\">#</a> Set 命令</h2>\n<table>\n<thead>\n<tr>\n<th>1</th>\n<th>[SADD key member1 <a href=\"https://www.runoob.com/redis/sets-sadd.html\">member2]</a> 向集合添加一个或多个成员</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>2</td>\n<td><a href=\"https://www.runoob.com/redis/sets-scard.html\">SCARD key</a> 获取集合的成员数</td>\n</tr>\n<tr>\n<td>3</td>\n<td>[SDIFF key1 <a href=\"https://www.runoob.com/redis/sets-sdiff.html\">key2]</a> 返回第一个集合与其他集合之间的差异。</td>\n</tr>\n<tr>\n<td>4</td>\n<td>[SDIFFSTORE destination key1 <a href=\"https://www.runoob.com/redis/sets-sdiffstore.html\">key2]</a> 返回给定所有集合的差集并存储在 destination 中</td>\n</tr>\n<tr>\n<td>5</td>\n<td>[SINTER key1 <a href=\"https://www.runoob.com/redis/sets-sinter.html\">key2]</a> 返回给定所有集合的交集</td>\n</tr>\n<tr>\n<td>6</td>\n<td>[SINTERSTORE destination key1 <a href=\"https://www.runoob.com/redis/sets-sinterstore.html\">key2]</a> 返回给定所有集合的交集并存储在 destination 中</td>\n</tr>\n<tr>\n<td>7</td>\n<td><a href=\"https://www.runoob.com/redis/sets-sismember.html\">SISMEMBER key member</a> 判断 member 元素是否是集合 key 的成员</td>\n</tr>\n<tr>\n<td>8</td>\n<td><a href=\"https://www.runoob.com/redis/sets-smembers.html\">SMEMBERS key</a> 返回集合中的所有成员</td>\n</tr>\n<tr>\n<td>9</td>\n<td><a href=\"https://www.runoob.com/redis/sets-smove.html\">SMOVE source destination member</a> 将 member 元素从 source 集合移动到 destination 集合</td>\n</tr>\n<tr>\n<td>10</td>\n<td><a href=\"https://www.runoob.com/redis/sets-spop.html\">SPOP key</a> 移除并返回集合中的一个随机元素</td>\n</tr>\n<tr>\n<td>11</td>\n<td>[SRANDMEMBER key <a href=\"https://www.runoob.com/redis/sets-srandmember.html\">count]</a> 返回集合中一个或多个随机数</td>\n</tr>\n<tr>\n<td>12</td>\n<td>[SREM key member1 <a href=\"https://www.runoob.com/redis/sets-srem.html\">member2]</a> 移除集合中一个或多个成员</td>\n</tr>\n<tr>\n<td>13</td>\n<td>[SUNION key1 <a href=\"https://www.runoob.com/redis/sets-sunion.html\">key2]</a> 返回所有给定集合的并集</td>\n</tr>\n<tr>\n<td>14</td>\n<td>[SUNIONSTORE destination key1 <a href=\"https://www.runoob.com/redis/sets-sunionstore.html\">key2]</a> 所有给定集合的并集存储在 destination 集合中</td>\n</tr>\n<tr>\n<td>15</td>\n<td>[SSCAN key cursor <a href=\"https://www.runoob.com/redis/sets-sscan.html\">MATCH pattern] [COUNT count]</a> 迭代集合中的元素</td>\n</tr>\n</tbody>\n</table>\n",
            "tags": [
                "Redis"
            ]
        },
        {
            "id": "https://prehitting.gitee.io/2022/05/16/redis/redis-ji-ben-shu-ju-lei-xing/redis-ming-ling-zi-fu-chuan-string/",
            "url": "https://prehitting.gitee.io/2022/05/16/redis/redis-ji-ben-shu-ju-lei-xing/redis-ming-ling-zi-fu-chuan-string/",
            "title": "Redis命令_字符串(String)",
            "date_published": "2022-05-16T14:46:07.000Z",
            "content_html": "<h2 id=\"string命令\"><a class=\"markdownIt-Anchor\" href=\"#string命令\">#</a> String 命令</h2>\n<ol>\n<li>获取 (设定) 值</li>\n</ol>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">set (key) (value)\nget (key)\ngetrange (key) start end #范围获取\ngetset (keyvalue) #获取并设定，返回原值<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<ol start=\"2\">\n<li>对 key 所储存的字符串值，获取（设定）指定偏移量上的位 (bit)。</li>\n</ol>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">getbit key offset\nsetbit key offset value<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<ol start=\"3\">\n<li>获取一个或多个给定 key 的值</li>\n</ol>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">mget key1[key2..]<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ol start=\"4\">\n<li>更改</li>\n</ol>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">incr key #将 key 中储存的数字值增\nincrby key increament#将 key 所储存的值加上给定的增量值（increment）\nincrbyfloat key increament#将 key 所储存的值加上给定的浮点增量值\ndecr key #将 key 中储存的数字值减一\ndecrby key decrement#key 所储存的值减去给定的减量值\nappend key value#如果 key 已经存在并且是一个字符串， APPEND 命令将指定的 value 追加到该 key 原来值（value）的末尾<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n",
            "tags": [
                "Redis"
            ]
        },
        {
            "id": "https://prehitting.gitee.io/2022/05/16/redis/redis-ji-ben-shu-ju-lei-xing/redis-ming-ling-ha-xi-hash/",
            "url": "https://prehitting.gitee.io/2022/05/16/redis/redis-ji-ben-shu-ju-lei-xing/redis-ming-ling-ha-xi-hash/",
            "title": "Redis命令_哈希(Hash)",
            "date_published": "2022-05-16T14:46:07.000Z",
            "content_html": "<h2 id=\"hash命令\"><a class=\"markdownIt-Anchor\" href=\"#hash命令\">#</a> Hash 命令</h2>\n<ol>\n<li>查</li>\n</ol>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">hexists key field#查看哈希表key中，指定字段是否存在\nhget key field#获取\nhgetall key#获取所有字段和值\nhkeys key#获取所有哈希表中的字段\nhlen key#获取哈希表中字段数量\nhmget key field1 [field2]#获取所有给定字段的值\nhscan key cursor [MATCH pattern] [COUNT count]#迭代键值对\nhvals key#获取哈希表中所有值<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ol start=\"2\">\n<li>增</li>\n</ol>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">hincrby key field increament#为哈希表 key 中的指定字段的整数值加上增量\nhincrbyfloat field increament#为哈希表 key 中的指定字段的浮点数值加上增量\nhmset key field1 value1 [field2] value2#设置多个键值对\nhsetnx key field value#字段不存在时设置字段的值<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<ol start=\"3\">\n<li>删</li>\n</ol>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">hdel key field1 [field2]#删除一个或多个字段<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ol start=\"4\">\n<li>改</li>\n</ol>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">hset key field value<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n",
            "tags": [
                "Redis"
            ]
        }
    ]
}